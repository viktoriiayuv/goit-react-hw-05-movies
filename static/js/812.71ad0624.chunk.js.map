{"version":3,"file":"static/js/812.71ad0624.chunk.js","mappings":"iNAGaA,EAAaC,EAAAA,GAAAA,GAAH,0DAMVC,GAAOD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,mK,SCcjB,EAnBe,SAAC,GAAgB,IAAdG,EAAa,EAAbA,OACVC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACN,EAAD,UACGI,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,yBACE,SAACP,EAAD,CAAMQ,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAA1C,SACGI,KAFID,EADC,KASjB,C,sHCfYK,E,OAAYZ,GAAAA,IAAH,2E,SCqBtB,EAjBiB,WACf,OAA4Ba,EAAAA,EAAAA,UAAS,IAArC,eAAOV,EAAP,KAAeW,EAAf,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MACGC,MAAK,SAAAd,GAAM,OAAIW,EAAUX,EAAd,IACXe,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,KAGD,UAACP,EAAD,YACE,4CACA,SAACU,EAAA,EAAD,CAAQnB,OAAQA,MAGrB,C,+LCbM,SAAea,IAAtB,4CAAO,OAAP,oBAAO,qGACkBO,EAAAA,EAAAA,GAAM,sBADxB,cACCC,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,wFACkBL,EAAAA,EAAAA,GAAM,uBAAD,OAAwBK,IAD/C,cACCJ,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BtB,GAA/B,wFACkBgB,EAAAA,EAAAA,GAAM,UAAD,OAAWhB,IADlC,cACCiB,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BvB,GAA/B,wFACkBgB,EAAAA,EAAAA,GAAM,UAAD,OAAWhB,EAAX,aADvB,cACCiB,EADD,yBAEEA,EAASC,KAAKM,MAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BzB,GAA/B,wFACkBgB,EAAAA,EAAAA,GAAM,UAAD,OAAWhB,EAAX,aADvB,cACCiB,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAzBPH,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBU,QAHc,mC","sources":["components/Movies/Movies.styled.jsx","components/Movies/Movies.jsx","pages/HomePage/HomePage.styled.jsx","pages/HomePage/HomePage.jsx","services/themoviedbAPI.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const MoviesList = styled.ul`\n  li {\n    padding: 4px 0;\n  }\n`;\n\nexport const Link = styled(NavLink)`\n  font-size: 20px;\n  text-decoration: none;\n  color: #000000;\n  font-weight: 500;\n\n  &:hover,\n  &:focus {\n    color: #c02b51;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { MoviesList, Link } from './Movies.styled';\n\nconst Movies = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <MoviesList>\n      {movies.map(({ id, title }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {title}\n          </Link>\n        </li>\n      ))}\n    </MoviesList>\n  );\n};\n\nMovies.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Movies;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 0 28px;\n\n  h1 {\n    margin: 0;\n  }\n`;\n","import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { getTrendingMovies } from 'services/themoviedbAPI';\nimport Movies from 'components/Movies/Movies';\nimport { Container } from './HomePage.styled';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    getTrendingMovies()\n      .then(movies => setMovies(movies))\n      .catch(error => console.log(error));\n  }, []);\n\n  return (\n    <Container>\n      <h1>Trending today</h1>\n      <Movies movies={movies} />\n    </Container>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\nconst API_KEY = 'c32494ab48f2db4575ae8be81883e5e9';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport async function getTrendingMovies() {\n  const response = await axios('trending/movie/day');\n  return response.data.results;\n}\n\nexport async function getMovieByKeyWord(keyword) {\n  const response = await axios(`/search/movie?query=${keyword}`);\n  return response.data.results;\n}\n\nexport async function getMovieDetails(id) {\n  const response = await axios(`/movie/${id}`);\n  return response.data;\n}\n\nexport async function getMovieCredits(id) {\n  const response = await axios(`/movie/${id}/credits`);\n  return response.data.cast;\n}\n\nexport async function getMovieReviews(id) {\n  const response = await axios(`/movie/${id}/reviews`);\n  return response.data.results;\n}\n"],"names":["MoviesList","styled","Link","NavLink","movies","location","useLocation","map","id","title","to","state","from","Container","useState","setMovies","useEffect","getTrendingMovies","then","catch","error","console","log","Movies","axios","response","data","results","getMovieByKeyWord","keyword","getMovieDetails","getMovieCredits","cast","getMovieReviews","api_key"],"sourceRoot":""}